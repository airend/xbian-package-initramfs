#!/bin/bash

if [ $1 == "configure" ]; then

	dpkg-trigger --no-await trigger-xbian-update-initramfs

	date > /home/xbian/xbian-initramfs-update.log

	echo "Disabling system initramfs-update process" >> /home/xbian/xbian-initramfs-update.log
	if [ $(grep -c "update_initramfs=no" /etc/initramfs-tools/update-initramfs.conf) -eq '1' ]
	then
		echo "Already disabled" >> /home/xbian/xbian-initramfs-update.log
	else
		sed -i 's/update_initramfs=yes/update_initramfs=no/' /etc/initramfs-tools/update-initramfs.conf
		if [ $(grep -c "update_initramfs=no" /etc/initramfs-tools/update-initramfs.conf) -eq '1' ]
		then
			echo "Disabled successfully" >> /home/xbian/xbian-initramfs-update.log
		else
			echo "ERROR disabling system initramfs-update process" >> /home/xbian/xbian-initramfs-update.log
		fi
	fi

        touch /var/run/reboot-required

        # echo "---UPDATE LOG---"
        # cat "/home/xbian/xbian-initramfs-update.log"

        insserv -fr /etc/init.d/triggerhappy &>/dev/null

elif [ $1 == "triggered" ]; then

        { mountpoint -q /boot && [ "$(findmnt -o source -n /boot)" = '/dev/mmcblk0p1' ]; } || { umount /boot >/dev/null 2>&1; mount -t vfat /dev/mmcblk0p1 /boot || { echo "CAN'T MOUNT BOOT"; exit 1; }; }
        /etc/xbian-initramfs/update-initramfs.sh > /dev/null 2>&1
        if ! grep -q "initramfs initramfs.gz  0x00a00000" /boot/config.txt; then
            cat /boot/config.txt | grep -v initramfs > /boot/config.txt.new
            echo "initramfs initramfs.gz  0x00a00000" > /boot/config.txt
            cat /boot/config.txt.new >> /boot/config.txt
            rm /boot/config.txt.new
        fi

fi

exit 0
