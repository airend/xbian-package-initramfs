#!/bin/bash

if [ $1 == "configure" ]; then

	dpkg-trigger --no-await trigger-xbian-update-initramfs

	echo $(date) > /home/xbian/xbian-initramfs-update.log

	echo "Disabling system initramfs-update process" >> /home/xbian/xbian-initramfs-update.log
	if [ $(grep -c "update_initramfs=no" /etc/initramfs-tools/update-initramfs.conf) -eq '1' ]
	then
		echo "Already disabled" >> /home/xbian/xbian-initramfs-update.log
	else
		sed 's/update_initramfs=yes/update_initramfs=no/' /etc/initramfs-tools/update-initramfs.conf \
			> /etc/initramfs-tools/update-initramfs.conf.new
		if [ $(grep -c "update_initramfs=no" /etc/initramfs-tools/update-initramfs.conf.new) -eq '1' ]
		then
			echo "Disabled successfully" >> /home/xbian/xbian-initramfs-update.log
			mv /etc/initramfs-tools/update-initramfs.conf.new /etc/initramfs-tools/update-initramfs.conf
		else
			echo "ERROR disabling system initramfs-update process" >> /home/xbian/xbian-initramfs-update.log
		fi
	fi

        echo "---UPDATE LOG---"
        cat "/home/xbian/xbian-initramfs-update.log"

elif [ $1 == "triggered" ]; then

        mountpoint -q /boot || { needumount=yes; mount /boot; }
        /etc/xbian-initramfs/update-initramfs.sh > /dev/null 2>&1
        cat /boot/config.txt | grep -v initramfs > /boot/config.txt.new
        echo "initramfs initramfs.gz  0x00a00000" > /boot/config.txt
        cat /boot/config.txt.new >> /boot/config.txt
        rm /boot/config.txt.new
        [ "$needumount" = "yes" ] && {  umount /boot || exit 1; }

fi

exit 0
