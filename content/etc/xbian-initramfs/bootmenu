#!/bin/sh

devices=$(blkid -u filesystem -o device | awk 'ORS=" "{print $1}')
filesystems=$(blkid -u filesystem -k | awk 'ORS=" "{print $1}')
boottargets=''

umount_all()
{
nets=$(ls /sys/class/net/)
mods=$(lsmod | cut -f1 -d' ' )

cat /proc/mounts | cut -f2 -d' '| uniq | sort -b -f -r \
        | while read mountpnt; do
                [ "$mountpnt" = "/proc" -o "$mountpnt" = "/dev" -o "$mountpnt" = "/" ] && continue
                echo "umounting $mountpnt"
                if [ -z "$1" ]; then
                         umount $mountpnt || umount -l $mountpnt
                fi
        done

        umount /proc; umount /dev
}

net_down()
{
        for n in $nets; do 
                echo "taking down $n"
                if [ -z "$1" ]; then
                         ifconfig $n down
                fi
        done
}

modules_down()
{
        for m in $mods; do 
                echo "removing module $m"
                if [ -z "$1" ]; then
                         /sbin/modprobe -r --remove-dependencies $m
                fi
        done
}

in_list() 
{

        case $filesystems in
                *" $1 "*)
                        return 0
                        ;;
        esac

        return 1

}

f()
{
        am=$(findmnt -n -f -o target $3)
        if [ -n "$am" ]; then
                mount -o bind $am $2
        else
                mount -t $1 -o ro $3 $2 > /dev/null 2>&1|| return 0
        fi

        [ -e $2/boot.cfg ] && . $2/boot.cfg || return 0

        [ -z "$name" -o -z "$kernel" -o -z "$initramfs" -o -z "$append" ] && return 0

        printf "%s" "$3 $name"
}

check_devices()
{

for dev in $devices; do
        o=''
        typed=$(blkid -s TYPE -o value $dev)
        in_list $typed || continue

        mntd=$(mktemp -d)

        o=$(f $typed $mntd $dev)
        [ -n "$o" ] && boottargets="$o $boottargets"

        [ '1' = "$(grep -c $mntd  /proc/mounts)" ] && umount $mntd
        rmdir $mntd
done

        echo $boottargets
}

opt=$(check_devices)
[ -e /bootmenu_timeout ] && /bootmenu_timeout &
echo $opt > /run/bootmenu
choice=$(whiptail --menu Choose\ your\ boot\ partition 25 60 10 $opt 3>&1 1>&2 2>&3)

pkill bootmenu_timeout
[ -z "$choice" -o "$choice" = "-" ] && exit 1

mntd=$(mktemp -d)
fm=$(findmnt -n -f -o target $choice)
if [ -n "$fm" ]; then
        mount -o bind $fm $mntd
else
        mount -t $(blkid -p -s TYPE -o value "$choice") $choice $mntd
fi

. $mntd/boot.cfg

echo "loading kernel"
eval /sbin/kexec --initrd=$mntd/$initramfs --append="\"$append root=$choice\"" -l $mntd/$kernel
echo "stopping processes"
#/sbin/killall5 -15 -o $$
sleep 10
umount_all 
net_down 
modules_down 
exec /sbin/kexec -e
